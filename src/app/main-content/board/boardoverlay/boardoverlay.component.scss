@import './../../../../styles.scss';

.modalOverlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    display: flex;
    justify-content: center;
    align-items: center;
}


.modalContent {
    background: white;
    border-radius: 30px;
    padding: 48px;
    width: 100%;
    max-width: 450px;
    position: relative;
    transform: none;
    transition: transform 0.3s ease-in-out;
    max-height: 90dvh;
    display: flex;
    flex-direction: column; 
}

.modalScrollableContentDisplay {
    flex: 1;
    overflow-y: auto;
    margin-bottom: 60px; 
    margin-top: 30px;
    
    &::-webkit-scrollbar { 
        width: 6px;
    }

    &::-webkit-scrollbar-thumb {
        background-color: rgba(0, 0, 0, 0.2); 
        border-radius: 10px;

        &:hover {
            background-color: rgba(0, 0, 0, 0.3);
        }
    }

    &::-webkit-scrollbar-track {
        background-color: rgba(0, 0, 0, 0.05);
        border-radius: 10px;
    }
}


.taskTag {
    display: inline-block;
    color: white;
    padding: 4px 16px;
    border-radius: 8px;
    margin-bottom: 24px;
    font-size: 14px;
}

.technicalTaskTag {
    background-color: $clrContact7; 
}

.user-story-tag {
    background-color: $clrContact1; 
}

.taskTitle {
    font-size: 32px;
    margin-bottom: 16px;
    color: $clrBaseDark;
}

.taskDescription {
    color: $clrBaseDark;
    margin-bottom: 32px;
}

.infoRow {
    margin-bottom: 24px;

    .label {
        display: block;
        color: $clrHighlight1;
        font-size: 14px;
        margin-bottom: 8px;
    }

    &.horizontal {
        display: flex;
        align-items: center;
        gap: 40px;

        .label {
            min-width: 100px;
            margin-bottom: 0;
        }
    }
}

.priorityBadge {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: $fSMobileTer;


    img {
        width: 20px;
        height: 20px;
    }
}

.assignedUsers {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 20px 16px;
    align-items: center;

    .userAvatar {
        width: 42px;
        height: 42px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 12px;
        font-weight: 500;
        color: white;
    }

    .userName {
        font-size: 14px;
    }
}

.customCheckbox {
    position: relative;
    width: 15px;
    height: 15px;
    margin-right: 8px;
    cursor: pointer;
    display: inline-block;
}
  
.checkboxEmpty, .checkboxChecked {
    position: absolute;
    top: 0;
    left: 0;
    width: 20px;
    height: 20px;
}
  
.checkboxChecked {
    display: none;
}
  
.customCheckbox.checked .checkboxEmpty {
    display: none;
}
  
.customCheckbox.checked .checkboxChecked { 
    display: block;
}
  
.subtasks {
    display: flex;
    justify-content: flex-start;
    flex-direction: column;
    gap: 8px;
}

.subtask {
    display: flex;
}
  
.subtaskText {
    cursor: pointer;
    margin-left: 4px;
    font-size: 14px;
}
  

.modalActions {
    display: flex;
    gap: 8px;
    position: absolute;
    bottom: 24px;
    right: 24px;

    .actionBtn {
        display: flex;
        align-items: center;
        gap: 4px;
        padding: 4px 8px;
        border: none;
        background: none;
        cursor: pointer;
        color: $clrBaseDark;
        font-size: $fsH4;

        img {
            width: 16px;
            height: 16px;
            transition: all 0.3s ease;
        }

        &:hover {
            color: $clrHighlight2;
            font-weight: 500;

            img {
                filter: invert(67%) sepia(72%) saturate(463%) hue-rotate(165deg) brightness(87%) contrast(90%);
            }
        }

        &.edit:hover::before {
            content: '';
            position: absolute;
            left: 75px;
            top: 50%;
            transform: translateY(-50%);
            height: 24px;
            width: 2px;
            background-color: $clrBaseGray;
        }
    }
}


// Edit Modal Styles

.editModal {
    position: relative;
    display: flex;
    flex-direction: column;
    background: white;
    border-radius: 30px;
    width: 100%;
    max-width: 500px;
    max-height: 90dvh;
}


.modalScrollableContent {
    margin-top: 80px;
    padding: 0px 10px;
    padding-bottom: 50px;
    overflow-y: auto;
    flex: 1;

    &::-webkit-scrollbar { 
        width: 6px;
    }

    &::-webkit-scrollbar-thumb {
        background-color: rgba(0, 0, 0, 0.2); 
        border-radius: 10px;

        &:hover {
            background-color: rgba(0, 0, 0, 0.3);
        }
    }

    &::-webkit-scrollbar-track {
        background-color: rgba(0, 0, 0, 0.05);
        border-radius: 10px;
    }
}

.form-group {
    display: flex;
    flex-direction: column;
    gap: 8px;

    label {
        color: $clrHighlight1;
        font-size: 14px;
    }
}

.editForm {
    display: flex;
    flex-direction: column;
    gap: 4px;
}

.clrRed {
    color: $clrErrorMessageText;
}

.inputAndErrorContainer {
    @include setFlex($fd: column, $ai: stretch)
}

.inputContainer {
    position: relative;
}

.subtaskInputContainer {
    position: relative;
}

.inputBtns {
    @include setFlex($gap: 4px);
    z-index: 1;
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    width: 20%;
}

.inputBtn {
    border-radius: 50%;

    &:hover {
        background-color: $clrBaseGray;
    }
}


.currentSubtasksList {
    @include setFlex($fd: column, $jc: flex-start, $ai: stretch, $gap: 4px);
    margin-top: 4px;
}

.currentSubtask {
    position: relative;
}

.currentSubtaskDisplayView {
    position: relative;
    cursor: pointer;
    border-radius: 10px;
    padding: 6px 16px;
    font-size: 16px;

    .currentSubtaskDisplayViewBtns{
        display:none;
    }

    &:hover {
        background-color: $clrBaseGray;
        .currentSubtaskDisplayViewBtns{
            display:flex;
        }
    }
}

.currentSubtaskEditView {
    position: relative;
    border-radius: 10px;
    font-size: 16px;
}

.currentSubtaskEditViewInput {
    border-radius: 0;
    outline: none;
    border: none;
    border-bottom: 1px solid $clrHighlight2;
    padding: 4px 21px;
    width: 100%;
}

.currentSubtaskDisplayViewBtns {
    @include setFlex();
    position: absolute;
    height: 100%;
    top: 0;
    right: 0;
}

.inputField {
    width: 100%;
}

.errorMessageContainer {
    @include setFlex($jc: flex-start);
    height: 16px;
}

.errorMessage {
    color: $clrErrorMessageText;
    padding-left: 8px;
    font-size: 12px;
}

textarea.inputField {
    min-height: 100px;
    resize: vertical;
    border: 1px solid $clrBaseGray;
    min-width: 100%;
    max-width: 100%;
}

// Prio
.prioSelection {
    @include setFlex($jc: space-between, $gap: 8px);
}

.prioChoice {
    cursor: pointer;
    @include setFlex($gap: 8px);
    padding: 10px 18px;
    background-color: $clrBaseBright;
    border-radius: 10px;


    svg {
        width: 20px;
    }
}

.shadow {
    filter: drop-shadow(0px 0px 4px rgba(0, 0, 0, 0.1));

    &:hover {
        filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.2));
    }
}

.clrBackgroundUrgent {
    background-color: $clrPrioUrgend;
    color: $clrBaseBright;
}

.clrBackgroundMedium {
    background-color: $clrPrioMedium;
    color: $clrBaseBright;
}

.clrBackgroundLow {
    background-color: $clrPrioLow;
    color: $clrBaseBright;
}

.clrFillUrgent {
    fill: $clrPrioUrgend;
}

.clrFillMedium {
    fill: $clrPrioMedium;
}

.clrFillLow {
    fill: $clrPrioLow;
}

// AssignTo
.selectionInput {
    @include setFlex($jc: space-between);
    background-color: $clrBaseBright;
    padding: $stdPaddingInteractive;
    border-radius: $stdRadiusInteractive;
    border: 1px solid $clrBaseGray;
}

.selectionInputImgContainer {
    border-radius: 50%;

    &:hover {
        background-color: $clrBaseGray;
    }
}

.selectedContaktList {
    @include setFlex($jc: flex-start); 
}

.selectionContaktList {
    position: relative;
    z-index: 11;
    @include setFlex($fd: column, $jc: flex-start, $ai: stretch);
    background-color: $clrBaseBright;
    height: 120px;
    overflow-y: auto;
    scrollbar-width: thin;
    border-radius: 10px;
}

.selectionContact {
    cursor: pointer;
    @include setFlex($jc: space-between, $gap: 16px);
    padding: 7px 16px;
    border-radius: 10px;

    &:hover {
        background-color: $clrBaseGray;
    }

    &:active {
        background-color: $clrHighlight1Darker;
        color: $clrBaseBright;
    }
}

.isSelected {
    background-color: $clrHighlight1Darker !important;
    color: $clrBaseBright;
}

.customCheckbox {
    position: relative;
    width: 15px;
    height: 15px;
    margin-right: 8px;
    cursor: pointer;
    display: inline-block;
}

.checkboxEmpty, .checkboxChecked {
    position: absolute;
    top: 0;
    left: 0;
    width: 20px;
    height: 20px;
}

.checkboxChecked { 
    display: none;  
}

.customCheckbox.checked .checkboxEmpty {
    display: none;
}

.customCheckbox.checked .checkboxChecked {
    display: block;
}

.selectionContact .customCheckbox.checked .checkboxChecked {
    filter: brightness(0) invert(1);  
}

.subtasks .customCheckbox.checked .checkboxChecked {
    filter: none; 
}

.contactShortcut {
    @include setFlex();
    color: white;
    border: 2px solid $clrBaseBright;
    border-radius: 50%;
    padding: 8px;
    font-size: 12px;
    font-weight: 400px;
    width: 42px;
    height: 42px;
}

.contactFullname {
    flex: 1;
    font-size: 16px;
    font-weight: 400px;
}

.subtask-input-group {
    display: flex;
    gap: 8px;
    align-items: center;
    width: 100%;
    margin-bottom: 16px;

    .inputField {
        width: 100%;
        padding: 12px;
        border: 1px solid #D1D1D1;
        border-radius: 8px;
        font-size: 16px;

        &:focus {
            outline: none;
        }
    }
}

.modalFooter {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 30px 50px;
    background: white;
    border-top: none;
    border-radius: 0 0 30px 30px;
    display: flex;
    justify-content: flex-end;

    .okBtn {
        background: $clrBaseDark;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 4px;
        transition: all 0.3s ease;

        img {
            width: 16px;
            height: 16px;
            filter: brightness(0) invert(1);
        }

        &:hover {
            background-color: $clrHighlight2;
        }
    }
}

label{
    padding-bottom: 4px;
}

.assignedToBackgroundContainer{
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 10;
}